# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            #$arrayCache: '@array.cache'
            #$redisCache: '@redis.cache'
            $arrayRedisCache: '@array_redis.cache'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Redis:
        class: Redis
        lazy: true
        calls:
            - method: connect
              arguments:
                  - '%env(REDIS_URL)%'
                  - '%env(REDIS_PORT)%'

    Symfony\Component\Cache\Adapter\RedisAdapter:
        arguments:
            $redisClient: '@Redis'
            $namespace: 'rebrickable_helper'
            $defaultLifetime: 9999999

    redis.cache: '@Symfony\Component\Cache\Adapter\RedisAdapter'

    array.cache:
        class: Symfony\Component\Cache\Adapter\ArrayAdapter
        arguments:
            $storeSerialized: false

    array_redis.cache:
        class: Symfony\Component\Cache\Adapter\ChainAdapter
        arguments:
            $adapters:
                - '@array.cache'
                - '@redis.cache'

    App\Client\RebrickableClient:
        arguments:
            $username: '%env(REBRICKABLE_USERNAME)%'
            $password: '%env(REBRICKABLE_PASSWORD)%'
